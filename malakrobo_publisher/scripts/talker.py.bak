#!/usr/bin/env python

import rospy
from std_msgs.msg import String, Float64, Header
from sensor_msgs.msg import JointState


def talker(data):
    initialPose = data.position[0]
    count = initialPose
    msgCount = 0
    direction = True
    pub = rospy.Publisher('/malakrobo/l_position_controller/command', Float64, queue_size=10)
    pub2 = rospy.Publisher('/malakrobo/r_position_controller/command', Float64, queue_size=10)
    rate = rospy.Rate(10) # 10hz
    while not rospy.is_shutdown():
	if direction:
		if msgCount > 200:
			direction = False
		else:
			msgCount = msgCount + 1
			count = count + 0.2
	else:
		if count <= 0:
			direction = True
		else:
			msgCount = msgCount - 1
			count = count - 0.2
        rospy.loginfo(count)
        pub.publish(count)
	pub2.publish(count)
        rate.sleep()

def callback(data):
    print(data.position)

def listener():
    rospy.init_node('pose_publisher', anonymous=True)
    rospy.Subscriber('/malakrobo/joint_states', JointState, talker)
    rospy.spin()

if __name__ == '__main__':
    try:
        #talker()
	listener()
    except rospy.ROSInterruptException:
        pass
